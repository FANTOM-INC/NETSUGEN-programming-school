* 事前にやること
#+begin_src shell
sudo apt update -y
sudo apt upgrade -y
#+end_src
#+begin_src shell
sudo apt-get install libjpeg-dev
sudo apt-get install -y poppler-utils
sudo apt -y install tesseract-ocr tesseract-ocr-jpn libtesseract-dev libleptonica-dev tesseract-ocr-script-jpan tesseract-ocr-script-jpan-vert 
#+end_src

JUMAN++をインストールする
#+begin_src shell
sudo apt install libboost-all-dev
wget https://github.com/ku-nlp/jumanpp/releases/download/v2.0.0-rc3/jumanpp-2.0.0-rc3.tar.xz
tar xvf jumanpp-2.0.0-rc3.tar.xz
sudo apt install build-essential -y
sudo apt install cmake -y
cd jumanpp-2.0.0-rc3/
mkdir buil
cd build/
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local
make
sudo make install
#+end_src
その後requirements.txtをpip3 installする

* 使い方
** excel.py
excelを読み込み、データを取得したり書き込んだりします。
#+begin_src shell
python excel.py
#+end_src
** =find_file.py=
file, pdf, excel, wordの文章を検索して、与えた文字列が含まれているファイルを表示します。

l92-93を適宜変更してから実行
#+begin_src shell
python find_file.py
#+end_src
** pdf2txt.py
pdfをテキストに変換します。
#+begin_src shell
python pdf2txt.py ./sample_file/sample.pdf
#+end_src
** =pdf_ocr.py=
pdfを画像として読み込みOCRしてテキストに変換します。

l37を適宜変更してから実行
#+begin_src shell
python pdf_ocr.py
#+end_src
** word2txt.py
wordをテキストに変換します。

l5を適宜変更してから実行
#+begin_src shell
python word2txt.py
#+end_src
** =logo_injection.py=
画像の四隅にロゴを貼り付けます。

l47-l61を適宜変更してから実行
#+begin_src shell
python logo_injection.py
#+end_src
** =prefix_image.py=
画像のファイル名にprefixをつけます。

l16を適宜変更してから実行
#+begin_src shell
python prefix_image.py
#+end_src
** =resize_image.py=
画像のサイズを変更します。

l10-12を適宜変更してから実行
#+begin_src shell
python resize_image.py
#+end_src
** whisper.py
whisperで動画をテキストに変換します。

l4を適宜変更してから実行
#+begin_src shell
python whisper.py
#+end_src
** pdf2wordcloud.py
pdfをテキストに変換し、wordcloudを作成します。

#+begin_src shell
python pdf2wordcloud.py
#+end_src
** txt2wordcloud.py
文字列をwordcloudに変換します。

l7を適宜変更してから実行
#+begin_src shell
python txt2wordcloud.py
#+end_src
** =get_tweet.py=
ツイートを取得します

#+begin_src shell
python get_tweet.py
xxxx (検索したい文字列)
#+end_src
** =tweet_to_csv.py=
ツイートをcsvに変換します
#+begin_src shell
python tweet_to_csv.py
xxxx (検索したい文字列)
#+end_src
** =plot_nikkei.py=
日経平均のcsvを読み込み、グラフを作成します
#+begin_src shell
python plot_nikkei.py
#+end_src
** = plot_nikkei_weekly.py=
日経平均のcsvを読み込み、年毎に価格を平均化してグラフを作成します
#+begin_src shell
python plot_nikkei_weekly.py
#+end_src


